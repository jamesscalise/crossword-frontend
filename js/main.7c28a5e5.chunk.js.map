{"version":3,"sources":["components/NavBar.js","components/Home.js","components/Login.js","components/Index.js","components/Square.js","components/BlackSquare.js","containers/SquaresContainer.js","containers/CluesContainer.js","containers/CrosswordsContainer.js","actions/crosswordActions.js","App.js","actions/scoresActions.js","actions/commentActions.js","serviceWorker.js","reducers/crosswordReducer.js","index.js"],"names":["NavBar","renderLinks","props","crosswords","map","crossword","style","marginRight","to","attributes","title","replace","borderBottom","paddingBottom","marginBottom","this","Component","Home","current_user","Login","state","text","event","setState","target","value","preventDefault","handleAddUser","onSubmit","handleOnSubmit","type","onChange","handleOnChange","Index","filter","computeTime","time","minutes","Math","floor","seconds","console","log","renderScores","scores","score","username","name","Square","isCorrect","length","charAt","toUpperCase","updateState","square","letter","addCorrect","reduceCorrect","textAlign","border","outline","width","height","maxLength","BlackSquare","SquaresContainer","rows","correct","won","total","squares","is_black","clockTick","prevState","checkTotal","alert","clearInterval","interval","handleWin","genMatrix","i","vals","y","join","push","genRows","rowVals","idx","key","className","genSquares","val","backgroundColor","cssFloat","fontSize","corner_value","setInterval","display","borderCollapse","CluesContainer","renderHorizontals","clues","clue","orientation","number","content","renderVerticals","margin","listStyleType","CrosswordsContainer","winTime","renderTimes","test_scores","sort","a","b","slice","handlePost","createCrosswords","postScore","id","onClick","connect","crossword_id","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","obj","App","addUser","renderCrosswordRoutes","path","render","routerProps","handleLoading","loading","exact","loadHome","loadCrosswords","fetchCrosswords","fetchScores","fetchComments","response","responseJSON","data","Boolean","window","location","hostname","match","crosswordReducer","comments","action","dir","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7c28a5e5.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { NavLink } from 'react-router-dom';\n\nclass NavBar extends Component {\n\n  renderLinks = () => (\n    this.props.crosswords.map(crossword =>(\n      <NavLink \n       style={{ marginRight: '10px' }} \n       to={`/${crossword.attributes.title.replace(/\\s/g, '')}`}\n        >\n      {crossword.attributes.title}\n      </NavLink>\n    ))\n  )\n\n\n\n render() {\n  return (\n    <div style={{ borderBottom: '2px solid black', paddingBottom: '10px', marginBottom: '12px' }}>\n        <NavLink \n        style={{ marginRight: '10px' }} \n        to=\"/\"\n      > \n        Home\n      </NavLink>\n      <NavLink \n      style={{ marginRight: '10px' }} \n      to=\"/index\"\n      >All Scores</NavLink>\n      {this.renderLinks()}\n    </div>\n  );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n\n    \n   \n    \n      render (){\n          return (\n          <div  >\n              Welcome, {`${this.props.current_user}`}! Enjoy the crosswords and try to beat the times!\n              Time to test this\n          </div>\n          )\n      }\n    \n    }\n\nexport default Home","import React, { Component } from 'react';\n\nclass Login extends Component {\n\n    state = {\n        text: ''\n    }\n\n    handleOnChange(event) {\n        this.setState({\n          text: event.target.value,\n        });\n      }\n\n      handleOnSubmit(event) {\n        event.preventDefault();\n        this.props.handleAddUser(this.state.text)\n        this.setState({\n          text: ''\n        })\n    }\n\n  \n    \n      render (){\n          return (\n          <div  >\n              <div>\n              Welcome to my crossword app! I've imported a number of fun New York Times crosswords of varying difficulties.\n              Before you begin, please enter a username so we may track your score.\n              </div>\n             \n              <form onSubmit={(event) => this.handleOnSubmit(event)} >\n                <input\n                    type=\"text\"\n                    value={this.state.text}\n                    onChange={(event) => this.handleOnChange(event)} />\n                <input type=\"submit\" />\n                </form>\n          </div>\n          )\n      }\n    \n    }\n\nexport default Login","import React, { Component } from 'react'\n\nclass Index extends Component {\n\n    state={\n        filter: \"none\"\n    }\n\n    computeTime = (time) => {\n        let minutes = Math.floor(time/60)\n        let seconds = time - (minutes * 60)\n        return `${minutes}m ${seconds}s`\n    }\n\n    handleOnChange = (event) => {\n        console.log(event.target.value)\n        this.setState({\n            filter: event.target.value\n        })\n    }\n\n\n\n    renderScores = (filter) => {\n        if (filter == \"none\"){\n        return this.props.scores.map(score => (\n            <div>\n                <div>Crossword:{score.crossword.title}</div>\n                 <div>User: {score.username}</div>\n                <div>Time: {this.computeTime(score.time)}</div>\n                <br></br>\n            </div>\n        ))\n        }else{\n            return this.props.scores.filter(score => score.crossword.title === filter).map(score =>(\n                <div>\n                <div>Crossword:{score.crossword.title}</div>\n                 <div>User: {score.username}</div>\n                <div>Time: {this.computeTime(score.time)}</div>\n                <br></br>\n                </div> \n            ))\n        }\n        }\n\n render() {\n  return (\n      <div>\n      <select onChange={this.handleOnChange}name=\"filters\">\n          <option value=\"none\">No filter</option>\n          <option value=\"Hard Crossword\">Hard Crossword Scores</option>\n          <option value=\"Easy Crossword\">Easy Crossword Scores</option>\n      </select>\n    <div>{this.props.scores ? this.renderScores(this.state.filter) : (2+2)} </div>\n    </div>\n     )\n  }\n}\n\nexport default Index;\n","import React, { Component } from 'react';\n\nclass Square extends Component {\n\nstate = {\n    text: '',\n    isCorrect: false\n}\n\nhandleOnChange = event => {\n    if (this.state.text.length > 0){\n        this.setState({\n            text: event.target.value.charAt(1).toUpperCase()\n          }, this.updateState);\n    }\n    else{\n    this.setState({\n      text: event.target.value.toUpperCase()\n    }, this.updateState);\n    }\n\n    }\n  \nupdateState = () => {\n  console.log(this.state.text)\n  if (this.state.text === this.props.square.letter.toUpperCase()){\n    if (this.state.isCorrect === false)\n    this.setState({\n      isCorrect: true\n    }, this.props.addCorrect())\n    \n  }\n    else{\n      if (this.state.isCorrect === true){\n      this.setState({\n        isCorrect: false\n      }, this.props.reduceCorrect())\n      \n    } \n    }\n}\n\n\n  render (){\n      return (\n      \n          <input \n            style={{textAlign: \"center\", border: \"none\", outline: \"none\",  width: \"70%\", height: \"55%\"}}\n            name=\"name\"\n            type=\"text\"\n            value={this.state.text}\n            maxLength=\"2\"\n           \n            onChange = {this.handleOnChange}\n          />\n     \n      )\n  }\n\n}\n\nexport default Square\n\n","import React, { Component } from 'react';\n\nclass BlackSquare extends Component {\n\n   \n    \n   \n    \n      render (){\n          return (\n          <div></div>\n              \n          )\n      }\n    \n    }\n\nexport default BlackSquare","import React, { Component } from 'react';\nimport Square from '../components/Square'\nimport BlackSquare from '../components/BlackSquare'\n\n\nclass SquaresContainer extends Component {\n\n    state ={\n        rows: [],\n        correct: 0,\n        time: 0,\n        won: false,\n        total: this.props.squares.filter((square) => square.is_black===false).length\n    }\n\n    componentDidMount() {\n        this.genMatrix()\n        this.interval = setInterval(this.clockTick, 1000)\n      }\n    \n      componentWillUnmount() {\n        clearInterval(this.interval)\n      }\n\n    clockTick = () => {\n        this.setState(prevState => ({\n          time: prevState.time+1\n        }))\n      }\n    \n\n    addCorrect = () => {\n       this.setState({\n            correct: this.state.correct + 1\n        }, this.checkTotal)\n    }\n\n    reduceCorrect = () =>{\n        this.setState({\n            correct: this.state.correct - 1\n        }, this.checkTotal)\n    }\n\n    checkTotal = () =>{\n        console.log(this.state.correct)\n        if (this.state.correct === this.state.total){\n            if (this.state.won === false){\n                alert(`You win! Your time was: ${this.props.computeTime(this.state.time) }`)\n                clearInterval(this.interval)\n                this.props.handleWin(this.state.time)\n                this.setState({\n                    won:true\n                })\n            }\n           \n\n        }\n    }\n\n    \n\n    genMatrix = () =>{\n        \n        var i\n        \n        for (i = 0; i < this.props.length; i++){\n            var vals = this.props.squares.filter(square => square.y === i)\n           \n            var join = this.state.rows\n            join.push(vals)\n           \n             this.setState({\n                rows: join\n              });\n        }\n        \n    }\n\n    genRows = () => (\n        this.state.rows.map((rowVals, idx) => \n            <tr key={idx} className = \"row\" >{this.genSquares(rowVals)}</tr>\n        )\n    ) \n\n    genSquares = (squares) => (\n        squares.map((val, idx) =>  {return(\n            val.is_black ? \n            <td key ={idx} style={{backgroundColor: \"black\", cssFloat: \"left\", width: \"19px\", height: \"20Px\", border: \"1px solid black\"}}><BlackSquare square ={val} /></td> :\n            <td key ={idx} style={{cssFloat: \"left\", width: \"19px\",  height: \"20px\", border: \"1px solid black\"}}><div style={{fontSize: \"8px\", height: \"20%\"}}>{val.corner_value}</div><Square style={{height: \"50%\"}}square ={val} addCorrect={this.addCorrect} reduceCorrect={this.reduceCorrect}/></td> \n            )}\n     ))\n\n    render() {\n        return(\n            \n            <div>\n                <h3>Time: { this.props.computeTime(this.state.time) }</h3>\n                <table style={{display: \"grid\", width: \"70%\", height: \"60%\", borderCollapse: \"Collapse\"}}>\n                    <tbody>\n                {this.genRows()}\n                </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default SquaresContainer","import React, { Component } from 'react';\n\nclass CluesContainer extends Component {\n\n    renderHorizontals = ()=> {\n        return(\n        this.props.clues.filter(clue => clue.orientation === \"horizontal\").map(clue =>\n            <li>{clue.number}: {clue.content}</li>\n            )\n        )\n        console.log(this.props.clues)\n    }\n\n    renderVerticals = () => {\n        return(\n            this.props.clues.filter(clue => clue.orientation === \"vertical\").map(clue =>\n                <li>{clue.number}: {clue.content}</li>\n                )\n            )\n\n    }\n\n\n    render (){\n        return(\n            <div>\n                \n                <h2>Clues</h2>\n                <div style={{cssFloat: \"left\", margin: \"10px\"}}>\n                <h3 >Across:</h3>\n                <ul style={{listStyleType:\"none\"}}>\n                {this.renderHorizontals()}\n                </ul>\n                </div>\n                <div style={{cssFloat: \"left\", margin: \"10px\"}}>\n                <h3>Verticals</h3>\n                <ul style={{listStyleType:\"none\"}}>\n                {this.renderVerticals()}\n                </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CluesContainer","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport SquaresContainer from './SquaresContainer.js'\nimport CluesContainer from './CluesContainer'\nimport {postScore} from '../actions/crosswordActions'\nclass CrosswordsContainer extends Component  {\n\n    state = {\n        winTime: 0\n    }\n   \n    computeTime = (time) => {\n        let minutes = Math.floor(time/60)\n        let seconds = time - (minutes * 60)\n        return `${minutes}m ${seconds}s`\n    }\n    \n    renderTimes = () => (\n      this.props.test_scores.sort(function(a, b){\n            return a.time-b.time\n        }).slice(0, 5).map(score => (\n        <li>{score.username}: {this.computeTime(score.time)}</li>\n        ))\n\n        )\n\n    handleWin = (time) => {\n        console.log(\"hit\")\n        this.setState({\n            winTime: time\n        }, this.handlePost)\n    }\n\n    createCrosswords = () => {\n        if (this.props.crossword){\n            return(\n                <div>\n                    <h1>{this.props.crossword.attributes.title}</h1>\n                    <h3>Best times:</h3>\n                   \n                    <ol>{this.renderTimes()}</ol>\n                    <SquaresContainer computeTime={this.computeTime}squares={this.props.crossword.attributes.squares} handleWin = {this.handleWin} length ={this.props.crossword.attributes.length}/>\n                    <CluesContainer clues = {this.props.crossword.attributes.clues}/>\n                </div>\n            )\n        }\n    }\n\n    handlePost = () => {\n        console.log(this.props.crossword)\n        this.props.postScore({\n            score: this.state.winTime,\n            username: this.props.current_user,\n            crossword: this.props.crossword.id\n        })\n    \n    }\n\n    render(){   \n        return (\n        <div>\n            {this.createCrosswords()}\n            {console.log(this.props.test_scores)}\n            <button onClick={this.handlePost}>Test post score</button>\n\n        </div>\n    )}\n  \n}\n\nconst mapStateToProps = (state, {crossword}) => {\n    return {\n        current_user: state.current_user,\n        test_scores: state.scores.filter(score => score.crossword_id == crossword.id)\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    postScore: ({score, username, crossword}) => {dispatch(postScore({score, username, crossword}))}\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CrosswordsContainer)\n","export const fetchCrosswords = () => {\n \n    return (dispatch) => {\n     \n      dispatch({ type: 'LOADING_CROSSWORDS'})\n      fetch('https://mighty-bastion-16545.herokuapp.com/crosswords').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        console.log(responseJSON.data)\n        dispatch({ type: 'ADD_CROSSWORDS', crosswords: responseJSON.data })\n\n      })\n    \n    } \n}\n\nexport const postScore = ({score, username, crossword}) => {\n  console.log(score)\n  console.log(username)\n  console.log(crossword)\n  return (dispatch) => {\n    fetch('https://mighty-bastion-16545.herokuapp.com/scores', {\n            method: 'POST',\n            headers:{\n            'Content-Type': 'application/json',\n            'Accept': \"application/json\"\n            },\n            body: JSON.stringify({\n              username: username,\n              time: score,\n              crossword_id: crossword\n            })\n             }).then(res => res.json()).\n             then(obj => {\n                console.log(obj)\n                dispatch({ type: 'ADD_SCORE', score: obj })\n\n             })\n   \n  }\n  \n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './components/NavBar';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\nimport { fetchCrosswords } from './actions/crosswordActions'\nimport {fetchScores} from './actions/scoresActions'\nimport {fetchComments} from './actions/commentActions'\nimport './App.css';\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport Index from './components/Index'\nimport CrosswordsContainer from './containers/CrosswordsContainer';\n  \nclass App extends Component {\n\n componentDidMount() {\n    \n    this.props.fetchCrosswords()\n    this.props.fetchScores()\n    this.props.fetchComments()\n\n  }\n\n  handleAddUser = (text) => {\n    console.log(text)\n    this.props.addUser(text)\n  }\n\n  renderCrosswordRoutes = () => (\n    \n    this.props.crosswords.map((crossword) => (\n      <Route path={`/${crossword.attributes.title.replace(/\\s/g, '')}`} render={routerProps => <CrosswordsContainer {...routerProps} crossword={crossword} />} />\n    ))\n  )\n\n\n  handleLoading = () => {\n    \n    if(this.props.loading) {\n      return <div>Loading...</div>\n    } else {\n      return (\n      <div>\n      <Route  exact path=\"/\" render={routerProps => <Home {...routerProps} current_user={this.props.current_user}/>} />\n      <Route path = \"/index\" render={routerProps => <Index {...routerProps} scores={this.props.scores}/>}  />\n        {this.renderCrosswordRoutes()}\n      </div>)\n    \n  }\n  }\n\n  \n\n  loadHome = () => {\n    return(\n      <div>\n        <Route  path=\"/\" render={routerProps => <Login {...routerProps}  handleAddUser={this.handleAddUser}/>} />\n      </div>\n    )\n  }\n\n  loadCrosswords = () => {\n    return(\n      <div>\n        <NavBar crosswords = {this.props.crosswords}/>\n        {this.handleLoading()}\n      </div>\n    )\n  }\n\n  render(){\n    return(\n    <div>\n      <Router>\n        {this.props.current_user ? this.loadCrosswords() : this.loadHome()}\n        \n      \n      </Router>\n      \n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    crosswords: state.crosswords,\n    loading: state.loading,\n    current_user: state.current_user,\n    scores: state.scores\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCrosswords: () => {dispatch(fetchCrosswords())},\n  fetchScores: () => {dispatch(fetchScores())},\n  fetchComments: () => {dispatch(fetchComments())},\n  addUser: (text) => dispatch({type: 'ADD_USER', text})\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","export const fetchScores = () => {\n    \n      return (dispatch) => {\n        \n        dispatch({ type: 'LOADING_SCORES'})\n        fetch('https://mighty-bastion-16545.herokuapp.com/scores').then(response => {\n          return response.json()\n        }).then(responseJSON => {\n          \n          dispatch({ type: 'ADD_SCORES', scores: responseJSON })\n  \n        })\n      }\n  }","export const fetchComments = () => {\n    \n    return (dispatch) => {\n      \n      dispatch({ type: 'LOADING_COMMENTS'})\n      fetch('https://mighty-bastion-16545.herokuapp.com/comments').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        \n        dispatch({ type: 'ADD_COMMENTS', scores: responseJSON })\n\n      })\n    }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const crosswordReducer = (state = { crosswords: [], scores: [], comments: [], loading: false }, action) => {\n  console.dir(state)\n    switch(action.type) {\n      \n      case 'LOADING_CROSSWORDS':\n        return {\n          ...state,\n          loading: true\n        }\n      case 'ADD_CROSSWORDS':\n        return {\n          ...state,\n          crosswords: action.crosswords,\n          loading: false\n        }\n      case 'LOADING_SCORES':\n        return {\n          ...state,\n          loading: true\n        }\n      case 'ADD_SCORES':\n        return {\n          ...state,\n          scores: action.scores,\n          loading: false\n        }\n      case 'LOADING_COMMENTS':\n        return {\n          ...state,\n          loading: true\n        }\n      case 'ADD_COMMENTS':\n        console.log(\"this has been hit\")\n        return {\n          ...state,\n          comments: action.comments,\n          loading: false\n        }\n      case 'ADD_USER':\n        return {\n          ...state,\n          current_user: action.text,\n          loading: false\n        }\n      case 'ADD_SCORE':\n          console.log(state.scores)\n          return {\n            ...state,\n            scores: [\n              ...state.scores,\n              action.score\n            ]\n\n          }\n      return state\n      default:\n        return state;\n    }\n  }\n    \n  export default crosswordReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport crosswordReducer from './reducers/crosswordReducer.js' \n\nconst store = createStore(crosswordReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}